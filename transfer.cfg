
# Save this output to a file to e.g. transfer.cfg and edit it for your configuration

[general]
# counter_name: Unique counter on target server to use for recording source changes processed. No spaces.
#    Name sensibly if you have multiple instances transferring into the same target p4 repository.
#    The counter value represents the last transferred change number - script will start from next change.
#    If not set, or 0 then transfer will start from first change.
counter_name = p4transfer_counter
# instance_name: Name of the instance of P4Transfer - for emails etc. Spaces allowed.
instance_name = Perforce Transfer from XYZ
# For notification - if smtp not available - expects a pre-configured nms FormMail script as a URL
mail_form_url = 
# The mail_* parameters must all be valid (non-blank) to receive email updates during processing. 
# mail_to: One or more valid email addresses - comma separated for multiple values
#     E.g. somebody@example.com,somebody-else@example.com
mail_to = 
# mail_from: Email address of sender of emails, E.g. p4transfer@example.com
mail_from = 
# mail_server: The SMTP server to connect to for email sending, E.g. smtpserver.example.com
mail_server = 
# ===============================================================================
# Note that for any of the following parameters identified as (Integer) you can specify a
# valid python expression which evaluates to integer value, e.g.
#     24 * 60
#     7 * 24 * 60
# -------------------------------------------------------------------------------
# sleep_on_error_interval (Integer): How long (in minutes) to sleep when error is encountered in the script
sleep_on_error_interval = 60
# poll_interval (Integer): How long (in minutes) to wait between polling source server for new changes
poll_interval = 60
# change_batch_size (Integer): changelists are processed in batches of this size
change_batch_size = 20000
# The following *_interval values result in reports, but only if mail_* values are specified
# report_interval (Integer): Interval (in minutes) between regular update emails being sent
report_interval = 30
# error_report_interval (Integer): Interval (in minutes) between error emails being sent e.g. connection error
#     Usually some value less than report_interval. Useful if transfer being run with --repeat option.
error_report_interval = 15
# summary_report_interval (Integer): Interval (in minutes) between summary emails being sent e.g. changes processed
#     Typically some value such as 1 week (10080 = 7 * 24 * 60). Useful if transfer being run with --repeat option.
summary_report_interval = 7 * 24 * 60
# sync_progress_size_interval (Integer): Size in bytes controlling when syncs are reported to log file. 
#    Useful for keeping an eye on progress for large syncs over slow network links. 
sync_progress_size_interval = 500 * 1000 * 1000
# change_description_format: The standard format for transferred changes. 
#    Keywords prefixed with $. Use \n for newlines. Keywords allowed: 
#     $sourceDescription, $sourceChange, $sourcePort, $sourceUser 
change_description_format = $sourceDescription\n\nTransferred from p4://$sourcePort@$sourceChange
# change_map_file: Name of an (optional) CSV file listing mappings of source/target changelists. 
#    If this is blank (DEFAULT) then no mapping file is created.
#    If non-blank, then a file with this name in the target workspace is appended to
#    and will be submitted after every sequence (batch_size) of changes is made.
#    Default type of this file is text+CS32 to avoid storing too many revisions.
#    File must be mapped into target client workspace.
#    File can contain a sub-directory, e.g. change_map/change_map.csv
change_map_file = 
# superuser: Set to n if not a superuser (so can't update change times - can just transfer them). 
superuser = y

[source]
# P4PORT to connect to, e.g. some-server:1666
p4port = 
# P4USER to use
p4user = 
# P4CLIENT to use, e.g. p4-transfer-client
p4client = 
# P4PASSWD for the user - valid password. If blank then no login performed.
# Recommended to make sure user is in a group with a long password timeout!.
p4passwd = 
# P4CHARSET to use, e.g. none, utf8, etc
p4charset =

[target]
# P4PORT to connect to, e.g. some-server:1666
p4port = 
# P4USER to use
p4user = 
# P4CLIENT to use, e.g. p4-transfer-client
p4client = 
# P4PASSWD for the user - valid password. If blank then no login performed.
# Recommended to make sure user is in a group with a long password timeout!.
p4passwd = 
# P4CHARSET to use, e.g. none, utf8, etc
p4charset =

